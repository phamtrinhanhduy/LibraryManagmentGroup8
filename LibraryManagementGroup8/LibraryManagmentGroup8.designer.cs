#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LibraryManagementGroup8
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LibraryManagmentGroup8")]
	public partial class LibraryManagmentGroup8DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLoanDetailTbl(LoanDetailTbl instance);
    partial void UpdateLoanDetailTbl(LoanDetailTbl instance);
    partial void DeleteLoanDetailTbl(LoanDetailTbl instance);
    partial void InsertLoanTbl(LoanTbl instance);
    partial void UpdateLoanTbl(LoanTbl instance);
    partial void DeleteLoanTbl(LoanTbl instance);
    partial void InsertUserTbl(UserTbl instance);
    partial void UpdateUserTbl(UserTbl instance);
    partial void DeleteUserTbl(UserTbl instance);
    partial void InsertBookTbl(BookTbl instance);
    partial void UpdateBookTbl(BookTbl instance);
    partial void DeleteBookTbl(BookTbl instance);
    partial void InsertUserDetailTbl(UserDetailTbl instance);
    partial void UpdateUserDetailTbl(UserDetailTbl instance);
    partial void DeleteUserDetailTbl(UserDetailTbl instance);
    #endregion
		
		public LibraryManagmentGroup8DataContext() : 
				base(global::LibraryManagementGroup8.Properties.Settings.Default.LibraryManagmentGroup8ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LibraryManagmentGroup8DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LibraryManagmentGroup8DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LibraryManagmentGroup8DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LibraryManagmentGroup8DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<LoanDetailTbl> LoanDetailTbls
		{
			get
			{
				return this.GetTable<LoanDetailTbl>();
			}
		}
		
		public System.Data.Linq.Table<LoanTbl> LoanTbls
		{
			get
			{
				return this.GetTable<LoanTbl>();
			}
		}
		
		public System.Data.Linq.Table<UserTbl> UserTbls
		{
			get
			{
				return this.GetTable<UserTbl>();
			}
		}
		
		public System.Data.Linq.Table<BookTbl> BookTbls
		{
			get
			{
				return this.GetTable<BookTbl>();
			}
		}
		
		public System.Data.Linq.Table<UserDetailTbl> UserDetailTbls
		{
			get
			{
				return this.GetTable<UserDetailTbl>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoanDetailTbl")]
	public partial class LoanDetailTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoanDetailId;
		
		private int _LoanId;
		
		private int _BId;
		
		private string _BName;
		
		private string _BAuthor;
		
		private string _BNotedBefore;
		
		private string _BNotedAfter;
		
		private string _LoanBStatus;
		
		private System.DateTime _LoanDate;
		
		private System.DateTime _DueDate;
		
		private System.DateTime _ReturnDate;
		
		private int _BForfeit;
		
		private EntityRef<LoanTbl> _LoanTbl;
		
		private EntityRef<BookTbl> _BookTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoanDetailIdChanging(int value);
    partial void OnLoanDetailIdChanged();
    partial void OnLoanIdChanging(int value);
    partial void OnLoanIdChanged();
    partial void OnBIdChanging(int value);
    partial void OnBIdChanged();
    partial void OnBNameChanging(string value);
    partial void OnBNameChanged();
    partial void OnBAuthorChanging(string value);
    partial void OnBAuthorChanged();
    partial void OnBNotedBeforeChanging(string value);
    partial void OnBNotedBeforeChanged();
    partial void OnBNotedAfterChanging(string value);
    partial void OnBNotedAfterChanged();
    partial void OnLoanBStatusChanging(string value);
    partial void OnLoanBStatusChanged();
    partial void OnLoanDateChanging(System.DateTime value);
    partial void OnLoanDateChanged();
    partial void OnDueDateChanging(System.DateTime value);
    partial void OnDueDateChanged();
    partial void OnReturnDateChanging(System.DateTime value);
    partial void OnReturnDateChanged();
    partial void OnBForfeitChanging(int value);
    partial void OnBForfeitChanged();
    #endregion
		
		public LoanDetailTbl()
		{
			this._LoanTbl = default(EntityRef<LoanTbl>);
			this._BookTbl = default(EntityRef<BookTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanDetailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LoanDetailId
		{
			get
			{
				return this._LoanDetailId;
			}
			set
			{
				if ((this._LoanDetailId != value))
				{
					this.OnLoanDetailIdChanging(value);
					this.SendPropertyChanging();
					this._LoanDetailId = value;
					this.SendPropertyChanged("LoanDetailId");
					this.OnLoanDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanId", DbType="Int NOT NULL")]
		public int LoanId
		{
			get
			{
				return this._LoanId;
			}
			set
			{
				if ((this._LoanId != value))
				{
					if (this._LoanTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoanIdChanging(value);
					this.SendPropertyChanging();
					this._LoanId = value;
					this.SendPropertyChanged("LoanId");
					this.OnLoanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BId", DbType="Int NOT NULL")]
		public int BId
		{
			get
			{
				return this._BId;
			}
			set
			{
				if ((this._BId != value))
				{
					if (this._BookTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBIdChanging(value);
					this.SendPropertyChanging();
					this._BId = value;
					this.SendPropertyChanged("BId");
					this.OnBIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BName
		{
			get
			{
				return this._BName;
			}
			set
			{
				if ((this._BName != value))
				{
					this.OnBNameChanging(value);
					this.SendPropertyChanging();
					this._BName = value;
					this.SendPropertyChanged("BName");
					this.OnBNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BAuthor", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BAuthor
		{
			get
			{
				return this._BAuthor;
			}
			set
			{
				if ((this._BAuthor != value))
				{
					this.OnBAuthorChanging(value);
					this.SendPropertyChanging();
					this._BAuthor = value;
					this.SendPropertyChanged("BAuthor");
					this.OnBAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BNotedBefore", DbType="NVarChar(100)")]
		public string BNotedBefore
		{
			get
			{
				return this._BNotedBefore;
			}
			set
			{
				if ((this._BNotedBefore != value))
				{
					this.OnBNotedBeforeChanging(value);
					this.SendPropertyChanging();
					this._BNotedBefore = value;
					this.SendPropertyChanged("BNotedBefore");
					this.OnBNotedBeforeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BNotedAfter", DbType="NVarChar(100)")]
		public string BNotedAfter
		{
			get
			{
				return this._BNotedAfter;
			}
			set
			{
				if ((this._BNotedAfter != value))
				{
					this.OnBNotedAfterChanging(value);
					this.SendPropertyChanging();
					this._BNotedAfter = value;
					this.SendPropertyChanged("BNotedAfter");
					this.OnBNotedAfterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanBStatus", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string LoanBStatus
		{
			get
			{
				return this._LoanBStatus;
			}
			set
			{
				if ((this._LoanBStatus != value))
				{
					this.OnLoanBStatusChanging(value);
					this.SendPropertyChanging();
					this._LoanBStatus = value;
					this.SendPropertyChanged("LoanBStatus");
					this.OnLoanBStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanDate", DbType="Date NOT NULL")]
		public System.DateTime LoanDate
		{
			get
			{
				return this._LoanDate;
			}
			set
			{
				if ((this._LoanDate != value))
				{
					this.OnLoanDateChanging(value);
					this.SendPropertyChanging();
					this._LoanDate = value;
					this.SendPropertyChanged("LoanDate");
					this.OnLoanDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="Date NOT NULL")]
		public System.DateTime DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnDate", DbType="Date NOT NULL")]
		public System.DateTime ReturnDate
		{
			get
			{
				return this._ReturnDate;
			}
			set
			{
				if ((this._ReturnDate != value))
				{
					this.OnReturnDateChanging(value);
					this.SendPropertyChanging();
					this._ReturnDate = value;
					this.SendPropertyChanged("ReturnDate");
					this.OnReturnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BForfeit", DbType="Int NOT NULL")]
		public int BForfeit
		{
			get
			{
				return this._BForfeit;
			}
			set
			{
				if ((this._BForfeit != value))
				{
					this.OnBForfeitChanging(value);
					this.SendPropertyChanging();
					this._BForfeit = value;
					this.SendPropertyChanged("BForfeit");
					this.OnBForfeitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoanTbl_LoanDetailTbl", Storage="_LoanTbl", ThisKey="LoanId", OtherKey="LoanId", IsForeignKey=true)]
		public LoanTbl LoanTbl
		{
			get
			{
				return this._LoanTbl.Entity;
			}
			set
			{
				LoanTbl previousValue = this._LoanTbl.Entity;
				if (((previousValue != value) 
							|| (this._LoanTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoanTbl.Entity = null;
						previousValue.LoanDetailTbls.Remove(this);
					}
					this._LoanTbl.Entity = value;
					if ((value != null))
					{
						value.LoanDetailTbls.Add(this);
						this._LoanId = value.LoanId;
					}
					else
					{
						this._LoanId = default(int);
					}
					this.SendPropertyChanged("LoanTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookTbl_LoanDetailTbl", Storage="_BookTbl", ThisKey="BId", OtherKey="BId", IsForeignKey=true)]
		public BookTbl BookTbl
		{
			get
			{
				return this._BookTbl.Entity;
			}
			set
			{
				BookTbl previousValue = this._BookTbl.Entity;
				if (((previousValue != value) 
							|| (this._BookTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookTbl.Entity = null;
						previousValue.LoanDetailTbls.Remove(this);
					}
					this._BookTbl.Entity = value;
					if ((value != null))
					{
						value.LoanDetailTbls.Add(this);
						this._BId = value.BId;
					}
					else
					{
						this._BId = default(int);
					}
					this.SendPropertyChanged("BookTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoanTbl")]
	public partial class LoanTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoanId;
		
		private int _UserId;
		
		private int _NOFBooks;
		
		private string _LoanStatus;
		
		private int _TotalBForfeit;
		
		private EntitySet<LoanDetailTbl> _LoanDetailTbls;
		
		private EntityRef<UserTbl> _UserTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoanIdChanging(int value);
    partial void OnLoanIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnNOFBooksChanging(int value);
    partial void OnNOFBooksChanged();
    partial void OnLoanStatusChanging(string value);
    partial void OnLoanStatusChanged();
    partial void OnTotalBForfeitChanging(int value);
    partial void OnTotalBForfeitChanged();
    #endregion
		
		public LoanTbl()
		{
			this._LoanDetailTbls = new EntitySet<LoanDetailTbl>(new Action<LoanDetailTbl>(this.attach_LoanDetailTbls), new Action<LoanDetailTbl>(this.detach_LoanDetailTbls));
			this._UserTbl = default(EntityRef<UserTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LoanId
		{
			get
			{
				return this._LoanId;
			}
			set
			{
				if ((this._LoanId != value))
				{
					this.OnLoanIdChanging(value);
					this.SendPropertyChanging();
					this._LoanId = value;
					this.SendPropertyChanged("LoanId");
					this.OnLoanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._UserTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOFBooks", DbType="Int NOT NULL")]
		public int NOFBooks
		{
			get
			{
				return this._NOFBooks;
			}
			set
			{
				if ((this._NOFBooks != value))
				{
					this.OnNOFBooksChanging(value);
					this.SendPropertyChanging();
					this._NOFBooks = value;
					this.SendPropertyChanged("NOFBooks");
					this.OnNOFBooksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanStatus", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string LoanStatus
		{
			get
			{
				return this._LoanStatus;
			}
			set
			{
				if ((this._LoanStatus != value))
				{
					this.OnLoanStatusChanging(value);
					this.SendPropertyChanging();
					this._LoanStatus = value;
					this.SendPropertyChanged("LoanStatus");
					this.OnLoanStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalBForfeit", DbType="Int NOT NULL")]
		public int TotalBForfeit
		{
			get
			{
				return this._TotalBForfeit;
			}
			set
			{
				if ((this._TotalBForfeit != value))
				{
					this.OnTotalBForfeitChanging(value);
					this.SendPropertyChanging();
					this._TotalBForfeit = value;
					this.SendPropertyChanged("TotalBForfeit");
					this.OnTotalBForfeitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoanTbl_LoanDetailTbl", Storage="_LoanDetailTbls", ThisKey="LoanId", OtherKey="LoanId")]
		public EntitySet<LoanDetailTbl> LoanDetailTbls
		{
			get
			{
				return this._LoanDetailTbls;
			}
			set
			{
				this._LoanDetailTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_LoanTbl", Storage="_UserTbl", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public UserTbl UserTbl
		{
			get
			{
				return this._UserTbl.Entity;
			}
			set
			{
				UserTbl previousValue = this._UserTbl.Entity;
				if (((previousValue != value) 
							|| (this._UserTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTbl.Entity = null;
						previousValue.LoanTbls.Remove(this);
					}
					this._UserTbl.Entity = value;
					if ((value != null))
					{
						value.LoanTbls.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("UserTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LoanDetailTbls(LoanDetailTbl entity)
		{
			this.SendPropertyChanging();
			entity.LoanTbl = this;
		}
		
		private void detach_LoanDetailTbls(LoanDetailTbl entity)
		{
			this.SendPropertyChanging();
			entity.LoanTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserTbl")]
	public partial class UserTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private string _UserLogName;
		
		private string _UserPass;
		
		private string _UserType;
		
		private System.DateTime _CreationDate;
		
		private System.DateTime _ExpirationDate;
		
		private string _UserStatus;
		
		private EntitySet<LoanTbl> _LoanTbls;
		
		private EntitySet<UserDetailTbl> _UserDetailTbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnUserLogNameChanging(string value);
    partial void OnUserLogNameChanged();
    partial void OnUserPassChanging(string value);
    partial void OnUserPassChanged();
    partial void OnUserTypeChanging(string value);
    partial void OnUserTypeChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnExpirationDateChanging(System.DateTime value);
    partial void OnExpirationDateChanged();
    partial void OnUserStatusChanging(string value);
    partial void OnUserStatusChanged();
    #endregion
		
		public UserTbl()
		{
			this._LoanTbls = new EntitySet<LoanTbl>(new Action<LoanTbl>(this.attach_LoanTbls), new Action<LoanTbl>(this.detach_LoanTbls));
			this._UserDetailTbls = new EntitySet<UserDetailTbl>(new Action<UserDetailTbl>(this.attach_UserDetailTbls), new Action<UserDetailTbl>(this.detach_UserDetailTbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLogName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserLogName
		{
			get
			{
				return this._UserLogName;
			}
			set
			{
				if ((this._UserLogName != value))
				{
					this.OnUserLogNameChanging(value);
					this.SendPropertyChanging();
					this._UserLogName = value;
					this.SendPropertyChanged("UserLogName");
					this.OnUserLogNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPass", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string UserPass
		{
			get
			{
				return this._UserPass;
			}
			set
			{
				if ((this._UserPass != value))
				{
					this.OnUserPassChanging(value);
					this.SendPropertyChanging();
					this._UserPass = value;
					this.SendPropertyChanged("UserPass");
					this.OnUserPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="Date NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpirationDate", DbType="Date NOT NULL")]
		public System.DateTime ExpirationDate
		{
			get
			{
				return this._ExpirationDate;
			}
			set
			{
				if ((this._ExpirationDate != value))
				{
					this.OnExpirationDateChanging(value);
					this.SendPropertyChanging();
					this._ExpirationDate = value;
					this.SendPropertyChanged("ExpirationDate");
					this.OnExpirationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserStatus", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string UserStatus
		{
			get
			{
				return this._UserStatus;
			}
			set
			{
				if ((this._UserStatus != value))
				{
					this.OnUserStatusChanging(value);
					this.SendPropertyChanging();
					this._UserStatus = value;
					this.SendPropertyChanged("UserStatus");
					this.OnUserStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_LoanTbl", Storage="_LoanTbls", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<LoanTbl> LoanTbls
		{
			get
			{
				return this._LoanTbls;
			}
			set
			{
				this._LoanTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_UserDetailTbl", Storage="_UserDetailTbls", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<UserDetailTbl> UserDetailTbls
		{
			get
			{
				return this._UserDetailTbls;
			}
			set
			{
				this._UserDetailTbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LoanTbls(LoanTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = this;
		}
		
		private void detach_LoanTbls(LoanTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = null;
		}
		
		private void attach_UserDetailTbls(UserDetailTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = this;
		}
		
		private void detach_UserDetailTbls(UserDetailTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookTbl")]
	public partial class BookTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BId;
		
		private string _BName;
		
		private string _BAuthor;
		
		private string _BGenre;
		
		private string _BYPublished;
		
		private int _BQuanlity;
		
		private System.Data.Linq.Binary _BImage;
		
		private System.DateTime _BAddDate;
		
		private string _BStatus;
		
		private string _BType;
		
		private string _BLink;
		
		private string _BLocation;
		
		private EntitySet<LoanDetailTbl> _LoanDetailTbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBIdChanging(int value);
    partial void OnBIdChanged();
    partial void OnBNameChanging(string value);
    partial void OnBNameChanged();
    partial void OnBAuthorChanging(string value);
    partial void OnBAuthorChanged();
    partial void OnBGenreChanging(string value);
    partial void OnBGenreChanged();
    partial void OnBYPublishedChanging(string value);
    partial void OnBYPublishedChanged();
    partial void OnBQuanlityChanging(int value);
    partial void OnBQuanlityChanged();
    partial void OnBImageChanging(System.Data.Linq.Binary value);
    partial void OnBImageChanged();
    partial void OnBAddDateChanging(System.DateTime value);
    partial void OnBAddDateChanged();
    partial void OnBStatusChanging(string value);
    partial void OnBStatusChanged();
    partial void OnBTypeChanging(string value);
    partial void OnBTypeChanged();
    partial void OnBLinkChanging(string value);
    partial void OnBLinkChanged();
    partial void OnBLocationChanging(string value);
    partial void OnBLocationChanged();
    #endregion
		
		public BookTbl()
		{
			this._LoanDetailTbls = new EntitySet<LoanDetailTbl>(new Action<LoanDetailTbl>(this.attach_LoanDetailTbls), new Action<LoanDetailTbl>(this.detach_LoanDetailTbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BId
		{
			get
			{
				return this._BId;
			}
			set
			{
				if ((this._BId != value))
				{
					this.OnBIdChanging(value);
					this.SendPropertyChanging();
					this._BId = value;
					this.SendPropertyChanged("BId");
					this.OnBIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BName
		{
			get
			{
				return this._BName;
			}
			set
			{
				if ((this._BName != value))
				{
					this.OnBNameChanging(value);
					this.SendPropertyChanging();
					this._BName = value;
					this.SendPropertyChanged("BName");
					this.OnBNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BAuthor", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BAuthor
		{
			get
			{
				return this._BAuthor;
			}
			set
			{
				if ((this._BAuthor != value))
				{
					this.OnBAuthorChanging(value);
					this.SendPropertyChanging();
					this._BAuthor = value;
					this.SendPropertyChanged("BAuthor");
					this.OnBAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BGenre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BGenre
		{
			get
			{
				return this._BGenre;
			}
			set
			{
				if ((this._BGenre != value))
				{
					this.OnBGenreChanging(value);
					this.SendPropertyChanging();
					this._BGenre = value;
					this.SendPropertyChanged("BGenre");
					this.OnBGenreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BYPublished", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string BYPublished
		{
			get
			{
				return this._BYPublished;
			}
			set
			{
				if ((this._BYPublished != value))
				{
					this.OnBYPublishedChanging(value);
					this.SendPropertyChanging();
					this._BYPublished = value;
					this.SendPropertyChanged("BYPublished");
					this.OnBYPublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BQuanlity", DbType="Int NOT NULL")]
		public int BQuanlity
		{
			get
			{
				return this._BQuanlity;
			}
			set
			{
				if ((this._BQuanlity != value))
				{
					this.OnBQuanlityChanging(value);
					this.SendPropertyChanging();
					this._BQuanlity = value;
					this.SendPropertyChanged("BQuanlity");
					this.OnBQuanlityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BImage", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary BImage
		{
			get
			{
				return this._BImage;
			}
			set
			{
				if ((this._BImage != value))
				{
					this.OnBImageChanging(value);
					this.SendPropertyChanging();
					this._BImage = value;
					this.SendPropertyChanged("BImage");
					this.OnBImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BAddDate", DbType="Date NOT NULL")]
		public System.DateTime BAddDate
		{
			get
			{
				return this._BAddDate;
			}
			set
			{
				if ((this._BAddDate != value))
				{
					this.OnBAddDateChanging(value);
					this.SendPropertyChanging();
					this._BAddDate = value;
					this.SendPropertyChanged("BAddDate");
					this.OnBAddDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BStatus", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string BStatus
		{
			get
			{
				return this._BStatus;
			}
			set
			{
				if ((this._BStatus != value))
				{
					this.OnBStatusChanging(value);
					this.SendPropertyChanging();
					this._BStatus = value;
					this.SendPropertyChanged("BStatus");
					this.OnBStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BType", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string BType
		{
			get
			{
				return this._BType;
			}
			set
			{
				if ((this._BType != value))
				{
					this.OnBTypeChanging(value);
					this.SendPropertyChanging();
					this._BType = value;
					this.SendPropertyChanged("BType");
					this.OnBTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BLink", DbType="VarChar(100)")]
		public string BLink
		{
			get
			{
				return this._BLink;
			}
			set
			{
				if ((this._BLink != value))
				{
					this.OnBLinkChanging(value);
					this.SendPropertyChanging();
					this._BLink = value;
					this.SendPropertyChanged("BLink");
					this.OnBLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BLocation", DbType="NVarChar(100)")]
		public string BLocation
		{
			get
			{
				return this._BLocation;
			}
			set
			{
				if ((this._BLocation != value))
				{
					this.OnBLocationChanging(value);
					this.SendPropertyChanging();
					this._BLocation = value;
					this.SendPropertyChanged("BLocation");
					this.OnBLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookTbl_LoanDetailTbl", Storage="_LoanDetailTbls", ThisKey="BId", OtherKey="BId")]
		public EntitySet<LoanDetailTbl> LoanDetailTbls
		{
			get
			{
				return this._LoanDetailTbls;
			}
			set
			{
				this._LoanDetailTbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LoanDetailTbls(LoanDetailTbl entity)
		{
			this.SendPropertyChanging();
			entity.BookTbl = this;
		}
		
		private void detach_LoanDetailTbls(LoanDetailTbl entity)
		{
			this.SendPropertyChanging();
			entity.BookTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserDetailTbl")]
	public partial class UserDetailTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DetailId;
		
		private int _UserId;
		
		private string _UserName;
		
		private System.DateTime _UserDOB;
		
		private string _UserEmail;
		
		private string _UserPhone;
		
		private string _UserAdd;
		
		private string _UserGender;
		
		private string _PersonId;
		
		private System.Data.Linq.Binary _UserPfp;
		
		private EntityRef<UserTbl> _UserTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDetailIdChanging(int value);
    partial void OnDetailIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserDOBChanging(System.DateTime value);
    partial void OnUserDOBChanged();
    partial void OnUserEmailChanging(string value);
    partial void OnUserEmailChanged();
    partial void OnUserPhoneChanging(string value);
    partial void OnUserPhoneChanged();
    partial void OnUserAddChanging(string value);
    partial void OnUserAddChanged();
    partial void OnUserGenderChanging(string value);
    partial void OnUserGenderChanged();
    partial void OnPersonIdChanging(string value);
    partial void OnPersonIdChanged();
    partial void OnUserPfpChanging(System.Data.Linq.Binary value);
    partial void OnUserPfpChanged();
    #endregion
		
		public UserDetailTbl()
		{
			this._UserTbl = default(EntityRef<UserTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DetailId
		{
			get
			{
				return this._DetailId;
			}
			set
			{
				if ((this._DetailId != value))
				{
					this.OnDetailIdChanging(value);
					this.SendPropertyChanging();
					this._DetailId = value;
					this.SendPropertyChanged("DetailId");
					this.OnDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._UserTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserDOB", DbType="Date NOT NULL")]
		public System.DateTime UserDOB
		{
			get
			{
				return this._UserDOB;
			}
			set
			{
				if ((this._UserDOB != value))
				{
					this.OnUserDOBChanging(value);
					this.SendPropertyChanging();
					this._UserDOB = value;
					this.SendPropertyChanged("UserDOB");
					this.OnUserDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserEmail", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserEmail
		{
			get
			{
				return this._UserEmail;
			}
			set
			{
				if ((this._UserEmail != value))
				{
					this.OnUserEmailChanging(value);
					this.SendPropertyChanging();
					this._UserEmail = value;
					this.SendPropertyChanged("UserEmail");
					this.OnUserEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPhone", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string UserPhone
		{
			get
			{
				return this._UserPhone;
			}
			set
			{
				if ((this._UserPhone != value))
				{
					this.OnUserPhoneChanging(value);
					this.SendPropertyChanging();
					this._UserPhone = value;
					this.SendPropertyChanged("UserPhone");
					this.OnUserPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAdd", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string UserAdd
		{
			get
			{
				return this._UserAdd;
			}
			set
			{
				if ((this._UserAdd != value))
				{
					this.OnUserAddChanging(value);
					this.SendPropertyChanging();
					this._UserAdd = value;
					this.SendPropertyChanged("UserAdd");
					this.OnUserAddChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserGender", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string UserGender
		{
			get
			{
				return this._UserGender;
			}
			set
			{
				if ((this._UserGender != value))
				{
					this.OnUserGenderChanging(value);
					this.SendPropertyChanging();
					this._UserGender = value;
					this.SendPropertyChanged("UserGender");
					this.OnUserGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPfp", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary UserPfp
		{
			get
			{
				return this._UserPfp;
			}
			set
			{
				if ((this._UserPfp != value))
				{
					this.OnUserPfpChanging(value);
					this.SendPropertyChanging();
					this._UserPfp = value;
					this.SendPropertyChanged("UserPfp");
					this.OnUserPfpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_UserDetailTbl", Storage="_UserTbl", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public UserTbl UserTbl
		{
			get
			{
				return this._UserTbl.Entity;
			}
			set
			{
				UserTbl previousValue = this._UserTbl.Entity;
				if (((previousValue != value) 
							|| (this._UserTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTbl.Entity = null;
						previousValue.UserDetailTbls.Remove(this);
					}
					this._UserTbl.Entity = value;
					if ((value != null))
					{
						value.UserDetailTbls.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("UserTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
